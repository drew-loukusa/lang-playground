# This grammar file has been modified to indicate what
# Elements of rules should be root nodes.
# Some rules use a re-write notation created for ANTLR
# The re-write allows you to discard unneeded lexical tokens

program: ^ statements ;

statements: ^ $STATEMENTS statement * ;

statement: ^ ( print_stat 
            | assign_stat 
            | expr_stat  
            | block_stat )
            ; 

print_stat: 'print' LPAREN bool_expr RPAREN SEMI_COLON   -> ^( 'print' bool_expr ) ;
assign_stat: NAME ASSIGN bool_expr SEMI_COLON            -> ^( '=' NAME bool_expr ) ; 
expr_stat: bool_expr SEMI_COLON                      -> ^( bool_expr ) ;
block_stat: '{' statements '}'                      -> ^( statements ) ; 

bool_expr: and_expr ( ^ 'or' and_expr ) * ;
and_expr: comp_expr ( ^ 'and' comp_expr ) * ; 
comp_expr: add_expr ( ^ cmp_op add_expr ) * ; 

add_expr: mult_expr ( ^ add_op mult_expr)* ; 
mult_expr: atom ( ^ mult_op atom)* ;
atom:   NAME    | 
        INT     | 
        FLOAT   | 
        'True'  |
        'False' |
        (LPAREN add_expr RPAREN) -> ^( NAME | INT | FLOAT | 'True' | 'False | add_expr ) ;

cmp_op: ^ ( '==' |  '>=' |  '<=' |  '>' |  '<' )      ;
add_op: ^ ( PLUS | MINUS );
mult_op: ^ ( STAR | FSLASH );